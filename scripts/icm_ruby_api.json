{
    "WSApplication": {
        "add_ons_folder": {
            "description": "Returns the path to the add-ons folder for the current ICM or InfoAsset installation. This folder is used for custom scripts, tools, and extensions.",
            "parameters": [],
            "returns": "String. The path to the add-ons folder."
        },
        "background_network": {
            "description": "Gets the currently open background network object. Only available when running from the UI and if a background network is open.",
            "parameters": [],
            "returns": "WSOpenNetwork object or null if no background network is open or not running in UI."
        },
        "cancel_job": {
            "description": "Cancels a job that is currently running on a job server.",
            "parameters": [
                {
                    "name": "job_id",
                    "type": "integer",
                    "description": "The ID of the job to cancel."
                }
            ],
            "returns": "None. The method attempts to cancel the specified job."
        },
        "choose_selection": {
            "description": "Displays a dialog for the user to choose a selection list from the current network. Only available when running from the UI.",
            "parameters": [
                {
                    "name": "prompt",
                    "type": "string",
                    "description": "The prompt to display in the dialog."
                }
            ],
            "returns": "String. The name of the chosen selection list, or nil if the user cancels."
        },
        "connect_local_agent": {
            "description": "Connects to a local agent. For use with WS Pro for scheduling runs on remote machines. (WS Pro Exchange only)",
            "parameters": [
                {
                    "name": "host",
                    "type": "string",
                    "description": "The hostname or IP address of the agent."
                },
                {
                    "name": "port",
                    "type": "integer",
                    "description": "The port number for the agent."
                },
                {
                    "name": "user",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional username for agent authentication.",
                    "optional": true
                },
                {
                    "name": "password",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional password for agent authentication.",
                    "optional": true
                },
                {
                    "name": "purpose",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional purpose of the connection.",
                    "optional": true
                }
            ],
            "returns": "None. Establishes connection or raises error on failure."
        },
        "current_database": {
            "description": "Returns the current WSDatabase object. UI only.",
            "parameters": [],
            "returns": "WSDatabase object or nil if no database is currently open."
        },
        "current_network": {
            "description": "Returns the current WSOpenNetwork object. Only available when running from the UI and a network is open. UI only.",
            "parameters": [],
            "returns": "WSOpenNetwork object or nil if no network is currently open or not running in UI."
        },
        "create": {
            "description": "Creates a new InfoWorks or InfoAsset database. This can be a local database or a master database. The type of database created depends on the extension. For example, .icmm for an ICM master database, .iogm for an InfoAsset master database.",
            "parameters": [
                {
                    "name": "path",
                    "type": "string",
                    "description": "Path for the new database. E.g. 'd:\\\\temp\\\\new_db.icmm' or 'server:40000/newdb'."
                },
                {
                    "name": "version",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional database version. E.g. '2023.0'. If this parameter is omitted the database will be created in the current version.",
                    "optional": true
                }
            ],
            "returns": "A WSDatabase object for the newly created database if successful."
        },
        "create_transportable": {
            "description": "Creates a transportable database from the current master database. This can only be used when the script is run from within a master database that is open in the UI.",
            "parameters": [
                {
                    "name": "path",
                    "type": "string",
                    "description": "The path for the transportable database to be created (e.g., 'd:\\\\temp\\\\mytransport.icmt')."
                },
                {
                    "name": "encrypt",
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "description": "Optional boolean. If true, the transportable database will be encrypted. Defaults to false.",
                    "optional": true
                }
            ],
            "returns": "None. Creates the transportable database at the specified path."
        },
        "file_dialog": {
            "description": "Displays a standard file dialog. Only available when running from the UI. UI only.",
            "parameters": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "The title for the dialog box."
                },
                {
                    "name": "default_path_and_file",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional string. Default path and filename.",
                    "optional": true
                },
                {
                    "name": "default_extension",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional string. Default extension (e.g., '.txt').",
                    "optional": true
                },
                {
                    "name": "extension_name",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional string. Description for the extension filter (e.g., 'Text files (*.txt)').",
                    "optional": true
                },
                {
                    "name": "save_dialog",
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "description": "Optional boolean. If true, displays a Save As dialog; otherwise, an Open dialog. Defaults to false (Open dialog).",
                    "optional": true
                }
            ],
            "returns": "String. The full path to the selected file, or nil if the user cancels."
        },
        "folder_dialog": {
            "description": "Displays a dialog for selecting a folder. Only available when running from the UI. UI only.",
            "parameters": [
                {
                    "name": "title",
                    "type": "string",
                    "description": "The title for the dialog box."
                },
                {
                    "name": "default_path",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional string. Default path for the dialog.",
                    "optional": true
                }
            ],
            "returns": "String. The path to the selected folder, or nil if the user cancels."
        },
        "input_box": {
            "description": "Displays a dialog prompting the user for input. Only available when running from the UI. UI only.",
            "parameters": [
                {
                    "name": "prompt",
                    "type": "string",
                    "description": "The prompt to display to the user."
                },
                {
                    "name": "title",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional string. The title for the input box. Defaults to application name.",
                    "optional": true
                },
                {
                    "name": "default_value",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional string. The default value to display in the input field.",
                    "optional": true
                }
            ],
            "returns": "String. The text entered by the user, or nil if the user cancels."
        },
        "message_box": {
            "description": "Displays a message box and waits for the user to click a button. Only available when running from the UI. UI only.",
            "parameters": [
                {
                    "name": "message",
                    "type": "string",
                    "description": "String to be displayed in the message box."
                },
                {
                    "name": "type",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional string specifying the type of message box. Can be 'OK' (default), 'OKCancel', 'YesNo', 'YesNoCancel', 'RetryCancel', 'AbortRetryIgnore'.",
                    "optional": true
                },
                {
                    "name": "title",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional string for the title bar of the message box. Defaults to the application name.",
                    "optional": true
                }
            ],
            "returns": "A string indicating which button was pressed: 'OK', 'Cancel', 'Yes', 'No', 'Retry', 'Abort', 'Ignore'."
        },
        "open": {
            "description": "Opens an InfoWorks or InfoAsset database. The database can be a local database or a master database. The type of database opened depends on the extension. For example, .icmm for an ICM master database, .iogm for an InfoAsset master database. Can also open read-only workgroup master databases.",
            "parameters": [
                {
                    "name": "path",
                    "type": "string",
                    "description": "Path to the database to be opened. E.g. 'd:\\\\temp\\\\my_db.icmm' or 'server:40000/mydb'."
                },
                {
                    "name": "allow_write",
                    "type": "boolean",
                    "description": "true if write access is required, false if read-only access is sufficient. If write access is requested but not available, the open will fail."
                },
                {
                    "name": "password",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional password for the database.",
                    "optional": true
                },
                {
                    "name": "options",
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "Optional string. For ICM master databases, this can be used to specify that a specific version of the master database should be opened by passing 'Version:version_name' as the string. For example, 'Version:My recovered version'.",
                    "optional": true
                }
            ],
            "returns": "A WSDatabase object. This will be null if the database cannot be opened."
        },
        "override_user_unit": {
            "description": "Overrides the user-defined unit for a specific field in a table. This affects how data is displayed and entered in the UI and how it's converted by scripting.",
            "parameters": [
                {
                    "name": "table_name",
                    "type": "string",
                    "description": "The internal name of the table (e.g., 'hw_node')."
                },
                {
                    "name": "field_name",
                    "type": "string",
                    "description": "The internal name of the field (e.g., 'ground_level')."
                },
                {
                    "name": "unit_string",
                    "type": "string",
                    "description": "The unit to apply (e.g., 'm', 'ft', 'MGD')."
                }
            ],
            "returns": "None. Applies the unit override."
        },
        "override_user_units": {
            "description": "Overrides multiple user-defined units. The units_array is an array of arrays, where each inner array contains [table_name, field_name, unit_string].",
            "parameters": [
                {
                    "name": "units_array",
                    "type": "array",
                    "description": "Array of arrays. Each sub-array: [string table_name, string field_name, string unit_string].",
                    "items": {
                        "type": "array",
                        "items": [
                            {
                                "type": "string",
                                "description": "Table name"
                            },
                            {
                                "type": "string",
                                "description": "Field name"
                            },
                            {
                                "type": "string",
                                "description": "Unit string"
                            }
                        ],
                        "minItems": 3,
                        "maxItems": 3
                    }
                }
            ],
            "returns": "None. Applies multiple unit overrides."
        },
        "results_folder": {
            "description": "Returns the path to the results folder for the current installation or as set by set_results_folder.",
            "parameters": [],
            "returns": "String. The path to the results folder."
        },
        "set_results_folder": {
            "description": "Sets the default folder for simulation results.",
            "parameters": [
                {
                    "name": "folder",
                    "type": "string",
                    "description": "The path to the results folder."
                }
            ],
            "returns": "None. Sets the results folder path."
        },
        "set_working_folder": {
            "description": "Sets the default working folder.",
            "parameters": [
                {
                    "name": "folder",
                    "type": "string",
                    "description": "The path to the working folder."
                }
            ],
            "returns": "None. Sets the working folder path."
        },
        "ui?": {
            "description": "Returns true if the script is running from the application's user interface, false otherwise (e.g., from ICM Exchange or InfoAsset Exchange). UI only functions runs if UI is true.",
            "parameters": [],
            "returns": "Boolean."
        },
        "use_user_units?": {
            "description": "Returns true if user-defined units are currently being used for data conversion, false if native units are used.",
            "parameters": [],
            "returns": "Boolean."
        },
        "use_user_units=": {
            "description": "Sets whether to use user-defined units (true) or native units (false) for data conversion.",
            "parameters": [
                {
                    "name": "boolean_value",
                    "type": "boolean",
                    "description": "true to use user units, false for native units."
                }
            ],
            "returns": "The assigned boolean value."
        },
        "version": {
            "description": "Returns the version string of the application (e.g., 'ICM X.Y').",
            "parameters": [],
            "returns": "String. The application version."
        },
        "wait_for_jobs": {
            "description": "Waits for one or more simulation jobs to complete. Only available when running from UI or certain Exchange environments that support job monitoring.",
            "parameters": [
                {
                    "name": "job_ids_array",
                    "type": "array",
                    "description": "Array of integers representing job IDs.",
                    "items": {
                        "type": "integer"
                    }
                },
                {
                    "name": "timeout_in_seconds",
                    "type": [
                        "integer",
                        "null"
                    ],
                    "description": "Optional integer. Maximum time to wait. If omitted or nil, waits indefinitely.",
                    "optional": true
                }
            ],
            "returns": "Boolean. true if all jobs completed, false if timed out or an error occurred."
        },
        "working_folder": {
            "description": "Returns the path to the current working folder for the application or as set by set_working_folder.",
            "parameters": [],
            "returns": "String. The path to the working folder."
        }
    },
    "WSDatabase": {
        "copy_into_root": {
            "description": "Given a model object (typically from another database) copies it into the database in the root, returning the new model object. The bCopySims and bCopyGroundModels parameters determine whether or not simulation results and ground models respectively are copied, corresponding to the equivalent user interface options.",
            "parameters": [
                "object - Model object to copy",
                "bCopySims - Boolean to determine if simulation results are copied",
                "bCopyGroundModels - Boolean to determine if ground models are copied"
            ],
            "returns": "Model object - The new copied model object",
            "availability": "Exchange only"
        },
        "find_model_object": {
            "description": "Given the scripting type of an object and a name of a version controlled object (not its scripting path), will return the model object in the database of that type with that name. This method only works for version controlled objects and takes advantage of the fact that version controlled objects have unique names.",
            "parameters": [
                "type - String representing the scripting type of the object",
                "name - String representing the name of the object (not scripting full path)"
            ],
            "returns": "Model object with the specified type and name, or null if not found",
            "availability": "All products"
        },
        "find_root_model_object": {
            "description": "Given the scripting type of an object and the name of an object, will return the model object with that name in the root of the database. Currently the only object types found in the root of the database are 'Master Group', 'Model Group' and 'Asset Group'.",
            "parameters": [
                "type - String representing the scripting type of the object",
                "name - String representing the name of the object"
            ],
            "returns": "Model object with the specified type and name in the root, or null if not found",
            "availability": "All products"
        },
        "guid": {
            "description": "Returns the GUID for the database, otherwise known as the 'database identifier'.",
            "parameters": [],
            "returns": "String - The GUID/database identifier",
            "availability": "All products"
        },
        "list_read_write_run_fields": {
            "description": "Returns an array of strings containing all the fields in the Run object that are read-write fields i.e. may be set from ICM Exchange scripts.",
            "parameters": [],
            "returns": "Array of strings - Field names that can be read and written in Run objects",
            "availability": "ICM only"
        },
        "model_object": {
            "description": "Given a scripting path of an object returns the model object with that path, otherwise returns nil. If you know the scripting path of the object in the database, this is the 'official' way of finding the model object.",
            "parameters": [
                "scripting_path - String representing the full scripting path of the object"
            ],
            "returns": "Model object at the specified path, or nil if not found",
            "availability": "All products"
        },
        "model_object_collection": {
            "description": "Given a scripting type, returns a WSModelObjectCollection of all the objects of that type – not just the objects of that type in the root.",
            "parameters": [
                "type - String representing the scripting type"
            ],
            "returns": "WSModelObjectCollection - Collection of all objects of the specified type",
            "availability": "All products"
        },
        "model_object_from_type_and_guid": {
            "description": "Returns the model object of the given scripting type with the 'CreationGUID' (an internal database field) given in the second parameter.",
            "parameters": [
                "type - String representing the scripting type",
                "guid - String representing the CreationGUID"
            ],
            "returns": "Model object with the specified type and GUID, or null if not found",
            "availability": "Exchange only"
        },
        "model_object_from_type_and_id": {
            "description": "Returns the model object in this database with the type and ID given. This can be an easy way of getting a WSModelObject from something you have found in the InfoWorks ICM UI by selecting the object in the tree and obtaining its properties.",
            "parameters": [
                "type - String from the list of scripting types",
                "id - Integer representing the ID in the database"
            ],
            "returns": "Model object with the specified type and ID, or null if not found",
            "availability": "All products"
        },
        "new_model_object": {
            "description": "Given a scripting type and a name, creates a new object with that name in the root of the database. The type must be a legal object type that can go into the root of the database i.e. 'Asset Group', 'Model Group' or 'Master Group'.",
            "parameters": [
                "type - String representing the scripting type (must be Asset Group, Model Group, or Master Group)",
                "name - String representing the name for the new object"
            ],
            "returns": "Model object - The newly created object",
            "availability": "Exchange only",
            "exceptions": [
                "unrecognised type",
                "invalid object type for the root of a database",
                "an object of this type and name already exists in root of database",
                "licence and/or permissions do not permit creation",
                "unable to create object"
            ]
        },
        "path": {
            "description": "Returns the pathname of the master database as a string.",
            "parameters": [],
            "returns": "String - The pathname of the master database",
            "availability": "All products"
        },
        "root_model_objects": {
            "description": "Returns a WSModelObjectCollection of all the objects in the root of the database.",
            "parameters": [],
            "returns": "WSModelObjectCollection - Collection of all root objects",
            "availability": "All products"
        },
        "result_root": {
            "description": "Returns the root used for results files for the database – i.e. the path within which results are stored when saved in server. This will be the path shown in the UI as 'Remote results root' when the user selects the 'Select remote roots…' option.",
            "parameters": [],
            "returns": "String - The path to the results root directory",
            "availability": "Exchange only"
        },
        "use_merge_version_control?": {
            "description": "Returns true if the master database is using merge version control for new objects, false otherwise (i.e. the same behaviour as the checked menu item in the UI).",
            "parameters": [],
            "returns": "Boolean - True if using merge version control, false otherwise",
            "availability": "WS Pro only"
        },
        "use_merge_version_control=": {
            "description": "Sets the value of the flag which determines whether new objects in the master database will use merge version control (i.e. the same behaviour as the checked menu item in the UI).",
            "parameters": [
                "b - Boolean value to set for merge version control flag"
            ],
            "returns": "void",
            "availability": "WS Pro only"
        }
    },
    "WSModelObjectCollection": {
        "count": {
            "description": "Returns the number of model objects in the collection.",
            "parameters": [],
            "returns": "Integer. The count of model objects."
        },
        "each": {
            "description": "Iterates over each model object in the collection, executing the provided block of code for each object.",
            "parameters": [
                {
                    "name": "block",
                    "type": "function",
                    "description": "A block of code that takes a model object as an argument."
                }
            ],
            "returns": "None. The block is executed for each model object."
        }
    },
    "WSModelObject": {
        "[]": {
            "description": "Array operator to get values from fields in the object. Most useful for InfoWorks Run object parameters.",
            "parameters": [
                {
                    "name": "field",
                    "type": "string",
                    "description": "Field name to retrieve value from"
                }
            ],
            "returns": "Value of the specified field"
        },
        "[]=": {
            "description": "Array operator to set values in fields of the object. The value may be a WSModelObject, object ID, or scripting path for object references.",
            "parameters": [
                {
                    "name": "field",
                    "type": "string",
                    "description": "Field name to set value for"
                },
                {
                    "name": "value",
                    "type": "mixed",
                    "description": "Value to set - can be Ruby value, WSModelObject, object ID, or scripting path"
                }
            ],
            "returns": "None"
        },
        "bulk_delete": {
            "description": "Deletes the object and all its children completely (not to recycle bin). Exchange only.",
            "parameters": [],
            "returns": "None"
        },
        "children": {
            "description": "Returns the children of the object as a WSModelObjectCollection. Exchange only.",
            "parameters": [],
            "returns": "WSModelObjectCollection. Collection of child objects."
        },
        "comment": {
            "description": "Returns the description text from the object's description tab. Exchange only.",
            "parameters": [],
            "returns": "String. The object's description."
        },
        "comment=": {
            "description": "Sets the description text for the object. Exchange only.",
            "parameters": [
                {
                    "name": "description",
                    "type": "string",
                    "description": "Description text to set"
                }
            ],
            "returns": "None"
        },
        "compare": {
            "description": "Compares two objects returning true if identical. Objects must be same type and version controlled or simulation results. ICM/InfoAsset Exchange only.",
            "parameters": [
                {
                    "name": "other_object",
                    "type": "WSModelObject",
                    "description": "Another model object to compare with"
                }
            ],
            "returns": "Boolean. True if objects are identical, false otherwise."
        },
        "copy_here": {
            "description": "Copies a model object (typically from another database) as a child of this object. Exchange only.",
            "parameters": [
                {
                    "name": "object",
                    "type": "WSModelObject",
                    "description": "Object to copy"
                },
                {
                    "name": "copy_sims",
                    "type": "boolean",
                    "description": "Whether to copy simulation results"
                },
                {
                    "name": "copy_ground_models",
                    "type": "boolean",
                    "description": "Whether to copy ground models"
                }
            ],
            "returns": "WSModelObject. The newly created copy."
        },
        "csv_import_tvd": {
            "description": "Imports time varying data from generic CSV into an asset group, creating time varying data objects. InfoAsset Exchange only.",
            "parameters": [
                {
                    "name": "file_path",
                    "type": "string",
                    "description": "Path to the CSV file"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Root name for the new object"
                },
                {
                    "name": "config_file_path",
                    "type": "string",
                    "description": "Path to the config file saved from UI"
                }
            ],
            "returns": "Array. Array of created objects."
        },
        "deletable?": {
            "description": "Returns true if the object can be deleted by normal means (not bulk_delete). Exchange only.",
            "parameters": [],
            "returns": "Boolean. True if object can be deleted normally."
        },
        "delete": {
            "description": "Deletes the object if it can be deleted normally (same rules as UI). Exchange only.",
            "parameters": [],
            "returns": "None"
        },
        "delete_results": {
            "description": "Deletes the results for the object if it is a simulation. ICM Exchange only.",
            "parameters": [],
            "returns": "None"
        },
        "export": {
            "description": "Exports the model object in the specified format. Supported formats depend on object type. ICM & InfoAsset Exchange only.",
            "parameters": [
                {
                    "name": "path",
                    "type": "string",
                    "description": "Export file path"
                },
                {
                    "name": "format",
                    "type": "string",
                    "description": "Export format (empty string for InfoWorks text format, 'CSV', or specific format codes)"
                }
            ],
            "returns": "None"
        },
        "find_child_model_object": {
            "description": "Finds and returns a child object with the specified type and name.",
            "parameters": [
                {
                    "name": "type",
                    "type": "string",
                    "description": "Scripting type of the object to find"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name of the object to find"
                }
            ],
            "returns": "WSModelObject. The found child object or null if not found."
        },
        "id": {
            "description": "Returns the ID of the model object.",
            "parameters": [],
            "returns": "Integer. The object's ID number."
        },
        "import_all_sw_model_objects": {
            "description": "Imports all SWMM model objects from a supported file. ICM Exchange only.",
            "parameters": [
                {
                    "name": "filepath",
                    "type": "string",
                    "description": "Path to the file to import"
                },
                {
                    "name": "format",
                    "type": "string",
                    "description": "File format ('INP', 'XPX', or 'MXD')"
                },
                {
                    "name": "scenario_id",
                    "type": "string",
                    "description": "Scenario ID (used only for MXD files, can be empty for others)"
                },
                {
                    "name": "log_filepath",
                    "type": "string",
                    "description": "Optional path for log file"
                }
            ],
            "returns": "Array. Array of created objects."
        },
        "import_data": {
            "description": "Imports data into an existing object (rainfall events and pollutographs). ICM Exchange only.",
            "parameters": [
                {
                    "name": "format",
                    "type": "string",
                    "description": "Format type ('CSV' or format codes like 'SMD', 'EVP', etc.)"
                },
                {
                    "name": "filepath",
                    "type": "string",
                    "description": "Path to the data file"
                }
            ],
            "returns": "None"
        },
        "import_grid_ground_model": {
            "description": "Imports a gridded ground model into a model or asset group. ICM & InfoAsset Exchange only.",
            "parameters": [
                {
                    "name": "polygon",
                    "type": "WSRowObject",
                    "description": "Polygon geometry object (can be nil)"
                },
                {
                    "name": "files",
                    "type": "array",
                    "description": "Array of one or more filenames"
                },
                {
                    "name": "options_hash",
                    "type": "hash",
                    "description": "Hash containing options like ground_model_name, data_type, cell_size, etc."
                }
            ],
            "returns": "None"
        },
        "import_infodrainage_object": {
            "description": "Imports objects from InfoDrainage iddx file. ICM Exchange only.",
            "parameters": [
                {
                    "name": "filepath",
                    "type": "string",
                    "description": "Full path to InfoDrainage iddx file"
                },
                {
                    "name": "object_type",
                    "type": "string",
                    "description": "Type of object to import (currently only 'Inflow')"
                },
                {
                    "name": "log_file",
                    "type": "string",
                    "description": "Full filepath for import log (rich text format)"
                }
            ],
            "returns": "WSModelObject. The imported object."
        },
        "import_new_model_object": {
            "description": "Imports a new model object from a file. ICM Exchange only.",
            "parameters": [
                {
                    "name": "type",
                    "type": "string",
                    "description": "Object type (Inflow, Level, Infiltration, etc.)"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name for the new object"
                },
                {
                    "name": "format",
                    "type": "string",
                    "description": "File format (empty string for InfoWorks format, 'CSV' for CSV format)"
                },
                {
                    "name": "filepath",
                    "type": "string",
                    "description": "Path to the file to import"
                }
            ],
            "returns": "WSModelObject. The imported object."
        },
        "import_new_model_object_from_generic_CSV_files": {
            "description": "Imports a new model object from CSV files using generic CSV importer with config file.",
            "parameters": [
                {
                    "name": "type",
                    "type": "string",
                    "description": "Object type to import"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name prefix for the event"
                },
                {
                    "name": "file_or_files",
                    "type": "mixed",
                    "description": "Filename or array of filenames"
                },
                {
                    "name": "config_file",
                    "type": "string",
                    "description": "Filename of the config file"
                }
            ],
            "returns": "Array. Two-element array: [WSModelObject, warning_message]"
        },
        "import_new_sw_model_object": {
            "description": "Imports a new SWMM model object from a file. ICM Exchange only.",
            "parameters": [
                {
                    "name": "type",
                    "type": "string",
                    "description": "Object type to import"
                },
                {
                    "name": "format",
                    "type": "string",
                    "description": "File format ('INP', 'XPX', or 'MXD')"
                },
                {
                    "name": "filepath",
                    "type": "string",
                    "description": "Path to the file"
                },
                {
                    "name": "scenario_id",
                    "type": "string",
                    "description": "Scenario ID (for MXD files only)"
                },
                {
                    "name": "log_filepath",
                    "type": "string",
                    "description": "Optional log file path"
                }
            ],
            "returns": "WSModelObject. The imported object."
        },
        "import_tvd": {
            "description": "Imports event data into an existing object. ICM & InfoAsset Exchange only.",
            "parameters": [
                {
                    "name": "filename",
                    "type": "string",
                    "description": "File to be imported"
                },
                {
                    "name": "format",
                    "type": "string",
                    "description": "Format ('CSV' or 'RED')"
                },
                {
                    "name": "event",
                    "type": "integer",
                    "description": "Event number (required but ignored)"
                }
            ],
            "returns": "None"
        },
        "modified_by": {
            "description": "Returns the name of the user who last modified the object.",
            "parameters": [],
            "returns": "String. Username of last modifier."
        },
        "name": {
            "description": "Returns the name of the object.",
            "parameters": [],
            "returns": "String. The object's name."
        },
        "name=": {
            "description": "Sets the name of the object. Exchange only.",
            "parameters": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "New name for the object"
                }
            ],
            "returns": "None"
        },
        "new_model_object": {
            "description": "Creates a child object with the specified type and name. Limited functionality in UI, full in Exchange.",
            "parameters": [
                {
                    "name": "type",
                    "type": "string",
                    "description": "Scripting type for the new object"
                },
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name for the new object"
                }
            ],
            "returns": "WSModelObject. The newly created child object."
        },
        "new_risk_analysis_run": {
            "description": "Creates a new risk analysis run object. ICM Exchange only.",
            "parameters": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name for the new run"
                },
                {
                    "name": "damage_function",
                    "type": "mixed",
                    "description": "Damage function (ID, scripting path, or WSModelObject)"
                },
                {
                    "name": "runs",
                    "type": "mixed",
                    "description": "Run object(s) - single object or array of IDs, paths, or WSModelObjects"
                },
                {
                    "name": "param",
                    "type": "number",
                    "description": "Numerical parameter"
                }
            ],
            "returns": "WSModelObject. The new risk analysis run object."
        },
        "new_run": {
            "description": "Creates a new run. Must be called on a model group. ICM Exchange only.",
            "parameters": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Name for the new run (must be unique in model group)"
                },
                {
                    "name": "network",
                    "type": "mixed",
                    "description": "Network (ID, scripting path, or WSNumbatNetworkObject)"
                },
                {
                    "name": "commit_id",
                    "type": "mixed",
                    "description": "Commit ID (integer or nil for latest)"
                },
                {
                    "name": "rainfalls_and_flow_surveys",
                    "type": "mixed",
                    "description": "Rainfall/flow survey objects (nil, object, path, ID, negative ID for flow survey, or array)"
                },
                {
                    "name": "scenarios",
                    "type": "mixed",
                    "description": "Scenario names (nil for base, string, or array of strings)"
                },
                {
                    "name": "parameters",
                    "type": "hash",
                    "description": "Hash containing run parameters"
                }
            ],
            "returns": "WSModelObject. The new run object."
        },
        "open": {
            "description": "Returns a WSOpenNetwork object for the model object (networks or sims only). Exchange only.",
            "parameters": [],
            "returns": "WSOpenNetwork. The opened network object."
        },
        "parent_id": {
            "description": "Returns the ID of the parent object (0 if in database root).",
            "parameters": [],
            "returns": "Integer. Parent object ID."
        },
        "parent_type": {
            "description": "Returns the scripting type of the parent object ('Master Database' if in database root).",
            "parameters": [],
            "returns": "String. Parent object type."
        },
        "path": {
            "description": "Returns the scripting path of the object.",
            "parameters": [],
            "returns": "String. The object's scripting path."
        },
        "status": {
            "description": "Gets the status field value (long integer) stored in database. WS Pro Exchange only.",
            "parameters": [],
            "returns": "Integer. Status field value (nil if not set)."
        },
        "status=": {
            "description": "Sets the status field value (long integer) in database. WS Pro Exchange only.",
            "parameters": [
                {
                    "name": "value",
                    "type": "integer",
                    "description": "Status value to set"
                }
            ],
            "returns": "None"
        },
        "type": {
            "description": "Returns the scripting type of the object.",
            "parameters": [],
            "returns": "String. The object's scripting type."
        },
        "update_to_latest": {
            "description": "Updates run to latest version of network. Only for runs with Working=true, no uncommitted changes, and all scenarios present and validated. Exchange only.",
            "parameters": [],
            "returns": "None"
        }
    },
    "WSNumbatNetworkObject": {
        "type": "object",
        "description": "Used in ICM Exchange, InfoAsset Exchange and WS Pro Exchange",
        "properties": {
            "methods": {
                "type": "object",
                "properties": {
                    "csv_import": {
                        "type": "object",
                        "description": "Updates the network from a CSV file with options similar to those available in the user interface",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "nno.csv_import(filename, options)"
                            },
                            "parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "filename"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "options"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "Hash|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    }
                                ]
                            },
                            "options": {
                                "type": "object",
                                "properties": {
                                    "Force Link Rename": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": true
                                            }
                                        }
                                    },
                                    "Flag Genuine Only": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "Load Null Fields": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": true
                                            }
                                        }
                                    },
                                    "Update With Any Flag": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": true
                                            },
                                            "description": {
                                                "const": "True to update all values, false to only update fields with the 'update flag' flag"
                                            }
                                        }
                                    },
                                    "Use Asset ID": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "User Units": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": true
                                            },
                                            "description": {
                                                "const": "Set to true for User Units, false for Native Units - used for fields without an explicit unit set in a 'units' record"
                                            }
                                        }
                                    },
                                    "UK Dates": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "If set to true, the import is done with the UK date format for dates regardless of the PC's settings"
                                            }
                                        }
                                    },
                                    "Action": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "Mixed"
                                            },
                                            "enum": {
                                                "const": [
                                                    "Mixed",
                                                    "Update And Add",
                                                    "Update Only",
                                                    "Delete"
                                                ]
                                            }
                                        }
                                    },
                                    "Header": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "ID"
                                            },
                                            "enum": {
                                                "const": [
                                                    "ID",
                                                    "ID Description",
                                                    "ID Description Units",
                                                    "ID Units"
                                                ]
                                            }
                                        }
                                    },
                                    "New Flag": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "description": {
                                                "const": "Flag used for new and updated data"
                                            }
                                        }
                                    },
                                    "Update Flag": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "description": {
                                                "const": "If the 'update with any flag' option is set to false, only update fields with this flag value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "csv_export": {
                        "type": "object",
                        "description": "Exports the network to a CSV file with options similar to those available in the user interface",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "nno.csv_export(filename, options)"
                            },
                            "parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "filename"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "options"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "Hash|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    }
                                ]
                            },
                            "options": {
                                "type": "object",
                                "properties": {
                                    "Use Display Precision": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": true
                                            }
                                        }
                                    },
                                    "Field Descriptions": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "Field Names": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": true
                                            }
                                        }
                                    },
                                    "Flag Fields": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": true
                                            }
                                        }
                                    },
                                    "Multiple Files": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "Set to true to export to different files, false to export to the same file"
                                            }
                                        }
                                    },
                                    "Native System Types": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "ICM / InfoAsset only"
                                            }
                                        }
                                    },
                                    "User Units": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "Object Types": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "Selection Only": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "Units Text": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "Triangles": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "ICM Model Networks only"
                                            }
                                        }
                                    },
                                    "Coordinate Arrays Format": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "Packed"
                                            },
                                            "enum": {
                                                "const": [
                                                    "Packed",
                                                    "None",
                                                    "Separate"
                                                ]
                                            }
                                        }
                                    },
                                    "Other Arrays Format": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "Packed"
                                            },
                                            "enum": {
                                                "const": [
                                                    "Packed",
                                                    "None",
                                                    "Unpacked"
                                                ]
                                            }
                                        }
                                    },
                                    "WGS84": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "Export coordinates as WGS84"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "odec_export_ex": {
                        "type": "object",
                        "description": "Exports network data using a previously set up Open Data Export Centre configuration",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "nno.odec_export_ex(format, config_file, options, ...)"
                            },
                            "parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "format"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            },
                                            "enum": {
                                                "const": [
                                                    "CSV",
                                                    "TSV",
                                                    "XML",
                                                    "MDB",
                                                    "SHP",
                                                    "MIF",
                                                    "TAB",
                                                    "GDB",
                                                    "ORACLE",
                                                    "SQLSERVER"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "config_file"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            },
                                            "description": {
                                                "const": "Path of the CFG file, as saved from the Open Data Import Centre user interface"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "options"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "Hash|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    }
                                ]
                            },
                            "format_parameters": {
                                "type": "object",
                                "properties": {
                                    "CSV": {
                                        "const": {
                                            "parameters_per_table": 2
                                        }
                                    },
                                    "TSV": {
                                        "const": {
                                            "parameters_per_table": 2
                                        }
                                    },
                                    "XML": {
                                        "const": {
                                            "parameters_per_table": 4
                                        }
                                    },
                                    "MDB": {
                                        "const": {
                                            "parameters_per_table": 3
                                        }
                                    },
                                    "SHP": {
                                        "const": {
                                            "parameters_per_table": 2
                                        }
                                    },
                                    "MIF": {
                                        "const": {
                                            "parameters_per_table": 2
                                        }
                                    },
                                    "TAB": {
                                        "const": {
                                            "parameters_per_table": 2,
                                            "note": "not WS Pro"
                                        }
                                    },
                                    "GDB": {
                                        "const": {
                                            "parameters_per_table": 6
                                        }
                                    },
                                    "ORACLE": {
                                        "const": {
                                            "parameters_per_table": 7
                                        }
                                    },
                                    "SQLSERVER": {
                                        "const": {
                                            "parameters_per_table": 9
                                        }
                                    }
                                }
                            },
                            "options": {
                                "type": "object",
                                "properties": {
                                    "Callback Class": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Ruby Class"
                                            },
                                            "default": {
                                                "const": null
                                            },
                                            "description": {
                                                "const": "ICM / InfoAsset Only"
                                            }
                                        }
                                    },
                                    "Script File": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": null
                                            },
                                            "description": {
                                                "const": "WS Pro Only"
                                            }
                                        }
                                    },
                                    "Error File": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": null
                                            }
                                        }
                                    },
                                    "Image Folder": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": ""
                                            },
                                            "description": {
                                                "const": "Asset Networks Only"
                                            }
                                        }
                                    },
                                    "Units Behaviour": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "Native"
                                            },
                                            "enum": {
                                                "const": [
                                                    "Native",
                                                    "User"
                                                ]
                                            }
                                        }
                                    },
                                    "Report Mode": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "True to export in 'report mode'"
                                            }
                                        }
                                    },
                                    "Append": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "True to enable 'Append to existing data'"
                                            }
                                        }
                                    },
                                    "Export Selection": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "True to export the selected objects only"
                                            }
                                        }
                                    },
                                    "Previous Version": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Integer"
                                            },
                                            "default": {
                                                "const": 0
                                            },
                                            "description": {
                                                "const": "Previous version, if not zero differences are exported"
                                            }
                                        }
                                    },
                                    "Create Primary Key": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "ICM / InfoAsset Only"
                                            }
                                        }
                                    },
                                    "WGS84": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "ICM / InfoAsset Only (shapefile only)"
                                            }
                                        }
                                    },
                                    "Don't Update Geometry": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "ICM / InfoAsset Only"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "odic_import_ex": {
                        "type": "object",
                        "description": "Imports and updates network data using a previously set up Open Data Import Centre configuration",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "nno.odic_import_ex(format, config_file, options, ...)"
                            },
                            "returns": {
                                "type": "string",
                                "const": "nil"
                            },
                            "parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "format"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            },
                                            "enum": {
                                                "const": [
                                                    "CSV",
                                                    "TSV",
                                                    "XML",
                                                    "MDB",
                                                    "SHP",
                                                    "TAB",
                                                    "GDB",
                                                    "ORACLE",
                                                    "SQLSERVER"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "config_file"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "options"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "Hash|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    }
                                ]
                            },
                            "format_parameters": {
                                "type": "object",
                                "properties": {
                                    "CSV": {
                                        "const": {
                                            "parameters_per_table": 2
                                        }
                                    },
                                    "TSV": {
                                        "const": {
                                            "parameters_per_table": 2
                                        }
                                    },
                                    "XML": {
                                        "const": {
                                            "parameters_per_table": 3
                                        }
                                    },
                                    "MDB": {
                                        "const": {
                                            "parameters_per_table": 3
                                        }
                                    },
                                    "SHP": {
                                        "const": {
                                            "parameters_per_table": 2
                                        }
                                    },
                                    "TAB": {
                                        "const": {
                                            "parameters_per_table": 2,
                                            "note": "ICM & InfoAsset only"
                                        }
                                    },
                                    "GDB": {
                                        "const": {
                                            "parameters_per_table": 3
                                        }
                                    },
                                    "ORACLE": {
                                        "const": {
                                            "parameters_per_table": 6
                                        }
                                    },
                                    "SQLSERVER": {
                                        "const": {
                                            "parameters_per_table": "10 for WS Pro, 8 for ICM and InfoNet"
                                        }
                                    }
                                }
                            },
                            "options": {
                                "type": "object",
                                "properties": {
                                    "Error File": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "Blank"
                                            }
                                        }
                                    },
                                    "Callback Class": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Ruby Class"
                                            },
                                            "default": {
                                                "const": null
                                            },
                                            "description": {
                                                "const": "ICM & InfoAsset only"
                                            }
                                        }
                                    },
                                    "Script File": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "blank"
                                            }
                                        }
                                    },
                                    "Set Value Flag": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "blank"
                                            }
                                        }
                                    },
                                    "Default Value Flag": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "blank"
                                            }
                                        }
                                    },
                                    "Image Folder": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "blank"
                                            },
                                            "description": {
                                                "const": "asset networks only"
                                            }
                                        }
                                    },
                                    "Duplication Behaviour": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "Merge"
                                            },
                                            "enum": {
                                                "const": [
                                                    "Duplication Behaviour",
                                                    "Overwrite",
                                                    "Merge",
                                                    "Ignore"
                                                ]
                                            }
                                        }
                                    },
                                    "Units Behaviour": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "Native"
                                            },
                                            "enum": {
                                                "const": [
                                                    "Native",
                                                    "User",
                                                    "Custom"
                                                ]
                                            }
                                        }
                                    },
                                    "Update Based On Asset ID": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "Update Only": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "Delete Missing Objects": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "Allow Multiple Asset IDs": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "Update Links From Points": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "Blob Merge": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "Use Network Naming Conventions": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    },
                                    "Import Images": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "Asset networks only"
                                            }
                                        }
                                    },
                                    "Group Type": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "blank"
                                            },
                                            "description": {
                                                "const": "Asset networks only"
                                            }
                                        }
                                    },
                                    "Group Name": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "blank"
                                            },
                                            "description": {
                                                "const": "Asset networks only"
                                            }
                                        }
                                    },
                                    "Network": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "WSOpenObject"
                                            },
                                            "default": {
                                                "const": null
                                            },
                                            "description": {
                                                "const": "WS Pro Only"
                                            }
                                        }
                                    },
                                    "Connect Pipes To Dummy Nodes": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "WS Pro Only"
                                            }
                                        }
                                    },
                                    "Dummy Node User Field": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": null
                                            },
                                            "description": {
                                                "const": "WS Pro Only"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "remove_local": {
                        "type": "object",
                        "description": "Removes the local copy of the network, any uncommitted changes will be lost",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "nno.remove_local"
                            },
                            "parameters": {
                                "type": "array",
                                "items": []
                            }
                        }
                    }
                }
            }
        }
    },
    "WSNetworkObject": {
        "type": "object",
        "description": "Used for lock version control in WS Pro only",
        "properties": {
            "methods": {
                "type": "object",
                "properties": {
                    "branched?": {
                        "type": "object",
                        "description": "Returns true if the object is branched, false otherwise",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "B=no.branched?"
                            },
                            "returns": {
                                "type": "string",
                                "const": "Boolean"
                            }
                        }
                    },
                    "check_in": {
                        "type": "object",
                        "description": "Checks in the version controlled object",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "no.check_in"
                            }
                        }
                    },
                    "check_out": {
                        "type": "object",
                        "description": "Checks out the version controlled object, giving the checked out version the name newname and returns the new object",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "new_object=no.check_out(new_name)"
                            },
                            "parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "new_name"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            }
                                        }
                                    }
                                ]
                            },
                            "returns": {
                                "type": "string",
                                "const": "WSNetworkObject"
                            }
                        }
                    },
                    "checked_out_by": {
                        "type": "object",
                        "description": "Returns the user-name of the user who has the object currently checked out. An empty string is returned if the object is not checked out",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "s=no.checked_out_by"
                            },
                            "returns": {
                                "type": "string",
                                "const": "String"
                            }
                        }
                    },
                    "checked_out?": {
                        "type": "object",
                        "description": "Returns true if the object is checked out, false otherwise",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "B=no.checked_out?"
                            },
                            "returns": {
                                "type": "string",
                                "const": "Boolean"
                            }
                        }
                    },
                    "check_out_and_branch": {
                        "type": "object",
                        "description": "As check_out but the checked out object is branched",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "new_object=no.check_out_and_branch(new_name)"
                            },
                            "parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "new_name"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            }
                                        }
                                    }
                                ]
                            },
                            "returns": {
                                "type": "string",
                                "const": "WSNetworkObject"
                            }
                        }
                    },
                    "undo_check_out": {
                        "type": "object",
                        "description": "For a checked out version controlled object, undoes the check-out i.e. effectively deletes it. The method delete will, in fact, perform the same function, but undo_check_out will only work for checked out objects so is slightly safer",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "no.undo_check_out"
                            }
                        }
                    }
                }
            }
        }
    },
    "WSSimObject": {
        "type": "object",
        "description": "Represents an ICM Sim object, a WS Sim object, an ICM Risk Analysis Results object or an ICM Risk Analysis Sim object",
        "properties": {
            "object_types": {
                "type": "array",
                "items": [
                    {
                        "type": "string",
                        "const": "ICM Sim"
                    },
                    {
                        "type": "string",
                        "const": "WS Pro Sim"
                    },
                    {
                        "type": "string",
                        "const": "Risk Analysis Results"
                    },
                    {
                        "type": "string",
                        "const": "Risk Analysis Sim"
                    }
                ]
            },
            "methods": {
                "type": "object",
                "properties": {
                    "list_max_results_attributes": {
                        "type": "object",
                        "description": "Returns an array of arrays corresponding to the tabs on the binary results export dialog",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "arr=sim.list_max_results_attributes"
                            },
                            "returns": {
                                "type": "string",
                                "const": "Array of Arrays"
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim",
                                    "Risk Analysis Results"
                                ]
                            }
                        }
                    },
                    "list_results_attributes": {
                        "type": "object",
                        "description": "Returns an array of arrays corresponding to the tabs on the binary results export dialog",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "arr=sim.list_results_attributes"
                            },
                            "returns": {
                                "type": "string",
                                "const": "Array of Arrays"
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim"
                                ]
                            }
                        }
                    },
                    "list_results_GIS_export_tables": {
                        "type": "object",
                        "description": "Returns an array of the tables that may be exported to GIS using the results_GIS_export method",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "arr=sim.list_results_GIS_export_tables"
                            },
                            "returns": {
                                "type": "string",
                                "const": "Array"
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim",
                                    "Risk Analysis Results",
                                    "Risk Analysis Sim"
                                ]
                            },
                            "available_tables": {
                                "type": "array",
                                "items": [
                                    "_2Delements",
                                    "_links",
                                    "hw_1d_results_point",
                                    "hw_2d_bridge",
                                    "hw_2d_linear_structure",
                                    "hw_2d_results_line",
                                    "hw_2d_results_point",
                                    "hw_2d_results_polygon",
                                    "hw_2d_sluice",
                                    "hw_bridge",
                                    "hw_bridge_opening",
                                    "hw_node",
                                    "hw_river_reach",
                                    "hw_subcatchment",
                                    "hw_tvd_connector"
                                ]
                            }
                        }
                    },
                    "list_timesteps": {
                        "type": "object",
                        "description": "For normal simulation returns results timesteps, for risk analysis returns return periods",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "arr=list_timesteps"
                            },
                            "returns": {
                                "type": "string",
                                "const": "Array"
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim",
                                    "Risk Analysis Results"
                                ]
                            }
                        }
                    },
                    "max_flood_contours_export": {
                        "type": "object",
                        "description": "Exports the flood contours to files (GIS or ASCII)",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "max_flood_contours_export(format, groundModel, theme, filename)"
                            },
                            "parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "format"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            },
                                            "enum": {
                                                "const": [
                                                    "MIF",
                                                    "TAB",
                                                    "SHP",
                                                    "ASCII"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "groundModel"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String|Integer|WSModelObject"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            },
                                            "description": {
                                                "const": "Scripting path, ID or WSModelObject. Negative ID = TIN, Positive ID = grid"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "theme"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String|Integer|WSModelObject"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "filename"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            }
                                        }
                                    }
                                ]
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim"
                                ]
                            }
                        }
                    },
                    "max_results_binary_export": {
                        "type": "object",
                        "description": "Exports the maximum results for the simulation in a binary file format",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "max_results_binary_export(selection, attributes, file)"
                            },
                            "parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "selection"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String|WSModelObject|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            },
                                            "description": {
                                                "const": "ID, scripting path of selection list object, WSModelObject, or nil for whole network"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "attributes"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "Array|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            },
                                            "description": {
                                                "const": "Array as described in list_max_results_attributes, or nil for all attributes"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "file"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            }
                                        }
                                    }
                                ]
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim",
                                    "Risk Analysis Results"
                                ]
                            }
                        }
                    },
                    "max_results_csv_export": {
                        "type": "object",
                        "description": "Exports the maximum results for the simulation in CSV format",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "max_results_csv_export(selection, attributes, folder)"
                            },
                            "parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "selection"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String|WSModelObject|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "attributes"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "Array|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "folder"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            }
                                        }
                                    }
                                ]
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim"
                                ]
                            }
                        }
                    },
                    "results_binary_export": {
                        "type": "object",
                        "description": "Exports the results for each results timestep for the simulation in binary format",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "results_binary_export(selection, attributes, file)"
                            },
                            "parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "selection"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String|WSModelObject|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "attributes"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "Array|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "file"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            }
                                        }
                                    }
                                ]
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim"
                                ]
                            }
                        }
                    },
                    "results_csv_export": {
                        "type": "object",
                        "description": "Exports the results for the simulation in CSV format",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "results_csv_export(selection, folder)"
                            },
                            "parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "selection"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String|WSModelObject|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "folder"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            }
                                        }
                                    }
                                ]
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim"
                                ]
                            }
                        }
                    },
                    "results_csv_export_ex": {
                        "type": "object",
                        "description": "Extended version of results_csv_export with additional parameters (different for ICM and WS Pro)",
                        "properties": {
                            "icm_signature": {
                                "type": "string",
                                "const": "results_csv_export_ex(selection, attributes, folder)"
                            },
                            "ws_pro_signature": {
                                "type": "string",
                                "const": "results_csv_export_ex(selection, folder, options)"
                            },
                            "icm_parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "selection"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String|WSModelObject|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "attributes"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "Array|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "folder"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            }
                                        }
                                    }
                                ]
                            },
                            "ws_pro_parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "selection"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String|WSModelObject|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "folder"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "options"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "Hash|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    }
                                ]
                            },
                            "ws_pro_options": {
                                "type": "object",
                                "properties": {
                                    "Group By Time": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            }
                                        }
                                    }
                                }
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim"
                                ]
                            }
                        }
                    },
                    "results_GIS_export": {
                        "type": "object",
                        "description": "Exports simulation results to GIS",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "results_GIS_export(format, timesteps, params, folder)"
                            },
                            "parameters": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "format"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            },
                                            "enum": {
                                                "const": [
                                                    "SHP",
                                                    "TAB",
                                                    "MIF",
                                                    "GDB"
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "timesteps"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "nil|String|Integer|Array"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            },
                                            "description": {
                                                "const": "nil, 'All', 'Max', integer timestep, or array of timesteps"
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "params"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "Hash|nil"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": false
                                            }
                                        }
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "const": "folder"
                                            },
                                            "type": {
                                                "type": "string",
                                                "const": "String"
                                            },
                                            "required": {
                                                "type": "boolean",
                                                "const": true
                                            },
                                            "description": {
                                                "const": "Base folder for files (or GeoDatabase name for GDB format)"
                                            }
                                        }
                                    }
                                ]
                            },
                            "params_options": {
                                "type": "object",
                                "properties": {
                                    "2DZoneSQL": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Array"
                                            },
                                            "description": {
                                                "const": "Array of arrays with field name, SQL expression, and optional decimal places"
                                            }
                                        }
                                    },
                                    "AlternativeNaming": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "description": {
                                                "const": "Use simpler naming convention for subfolders/feature datasets"
                                            }
                                        }
                                    },
                                    "ExportMaxima": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "Export maximum results (doesn't apply to WS)"
                                            }
                                        }
                                    },
                                    "Feature Dataset": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": ""
                                            },
                                            "description": {
                                                "const": "For GeoDatabases, the name of the feature dataset"
                                            }
                                        }
                                    },
                                    "Tables": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Array"
                                            },
                                            "description": {
                                                "const": "Array of table names to export (default: all tables)"
                                            }
                                        }
                                    },
                                    "Threshold": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Double"
                                            },
                                            "description": {
                                                "const": "Depth threshold below which 2D element is not exported (doesn't apply to WS)"
                                            }
                                        }
                                    },
                                    "UseArcGISCompatibility": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "Enable ArcGIS compatibility (doesn't apply to WS)"
                                            }
                                        }
                                    }
                                }
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim",
                                    "Risk Analysis Results",
                                    "Risk Analysis Sim"
                                ]
                            }
                        }
                    },
                    "results_path": {
                        "type": "object",
                        "description": "Returns the path to the results",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "sim.results_path"
                            },
                            "returns": {
                                "type": "string",
                                "const": "String"
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim"
                                ]
                            }
                        }
                    },
                    "run": {
                        "type": "object",
                        "description": "Runs a simulation, waiting until completion",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "sim.run"
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim"
                                ]
                            }
                        }
                    },
                    "run_ex": {
                        "type": "object",
                        "description": "Extended run method with server and threading control",
                        "properties": {
                            "icm_signature_1": {
                                "type": "string",
                                "const": "sim.run_ex(server, number_of_threads)"
                            },
                            "icm_signature_2": {
                                "type": "string",
                                "const": "sim.run_ex(hash)"
                            },
                            "ws_pro_signature": {
                                "type": "string",
                                "const": "sim.run_ex(hash)"
                            },
                            "icm_hash_options": {
                                "type": "object",
                                "properties": {
                                    "Server": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "."
                                            },
                                            "description": {
                                                "const": "Machine name, '.' for local, '*' for any available"
                                            }
                                        }
                                    },
                                    "Threads": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Integer"
                                            },
                                            "description": {
                                                "const": "Number of threads, 0 for maximum possible"
                                            }
                                        }
                                    },
                                    "SU": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "Must be true for InfoWorks One"
                                            }
                                        }
                                    },
                                    "ResultsOnServer": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": false
                                            },
                                            "description": {
                                                "const": "Store results on server"
                                            }
                                        }
                                    }
                                }
                            },
                            "ws_pro_hash_options": {
                                "type": "object",
                                "properties": {
                                    "RunOn": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "String"
                                            },
                                            "default": {
                                                "const": "*"
                                            },
                                            "description": {
                                                "const": "Machine name, '.' for local, '*' for any available"
                                            }
                                        }
                                    },
                                    "MaxConcurrentJobs": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Integer"
                                            },
                                            "default": {
                                                "const": 0
                                            }
                                        }
                                    },
                                    "MaxRuntimeSeconds": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Integer"
                                            },
                                            "default": {
                                                "const": 86400
                                            },
                                            "description": {
                                                "const": "Maximum runtime in seconds, default 1 day"
                                            }
                                        }
                                    },
                                    "ResultsOnServer": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "const": "Boolean"
                                            },
                                            "default": {
                                                "const": true
                                            },
                                            "description": {
                                                "const": "Store results on server"
                                            }
                                        }
                                    }
                                }
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim"
                                ]
                            }
                        }
                    },
                    "status": {
                        "type": "object",
                        "description": "Returns the status of simulation",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "n=sim.status"
                            },
                            "returns": {
                                "type": "string",
                                "const": "String"
                            },
                            "possible_values": {
                                "type": "array",
                                "items": [
                                    "None",
                                    "Active",
                                    "Success",
                                    "Fail"
                                ]
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim"
                                ]
                            }
                        }
                    },
                    "success_substatus": {
                        "type": "object",
                        "description": "Returns the substatus if simulation succeeded",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "n=sim.success_substatus"
                            },
                            "returns": {
                                "type": "string",
                                "const": "String"
                            },
                            "possible_values": {
                                "type": "array",
                                "items": [
                                    "Incomplete",
                                    "Warnings",
                                    "OK"
                                ]
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim"
                                ]
                            }
                        }
                    },
                    "get": {
                        "type": "object",
                        "description": "Gets property value (method signature not fully specified in document)",
                        "properties": {
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim"
                                ]
                            }
                        }
                    },
                    "timestep_count": {
                        "type": "object",
                        "description": "Returns the number of results timesteps for a simulation",
                        "properties": {
                            "signature": {
                                "type": "string",
                                "const": "n=sim.timestep_count"
                            },
                            "returns": {
                                "type": "string",
                                "const": "Integer"
                            },
                            "availability": {
                                "type": "array",
                                "items": [
                                    "ICM Sim",
                                    "WS Pro Sim",
                                    "Risk Analysis Results",
                                    "Risk Analysis Sim"
                                ]
                            }
                        }
                    }
                }
            }
        }
    }
}